(()=>{"use strict";var e={891:(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CspAlerter=void 0;const o=s(414),n=s(131);t.CspAlerter=class{constructor(){this.didShow=!1,this.didHaveCspWarning=!1,document.addEventListener("securitypolicyviolation",(()=>{this.onCspWarning()})),window.addEventListener("message",(e=>{e&&e.data&&"vscode-did-block-svg"===e.data.name&&this.onCspWarning()}))}setPoster(e){this.messaging=e,this.didHaveCspWarning&&this.showCspWarning()}onCspWarning(){this.didHaveCspWarning=!0,this.showCspWarning()}showCspWarning(){const e=(0,n.getStrings)(),t=(0,o.getSettings)();if(this.didShow||t.disableSecurityWarnings||!this.messaging)return;this.didShow=!0;const s=document.createElement("a");s.innerText=e.cspAlertMessageText,s.setAttribute("id","code-csp-warning"),s.setAttribute("title",e.cspAlertMessageTitle),s.setAttribute("role","button"),s.setAttribute("aria-label",e.cspAlertMessageLabel),s.onclick=()=>{this.messaging.postMessage("showPreviewSecuritySelector",{source:t.source})},document.body.appendChild(s)}}},992:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.StyleLoadingMonitor=void 0,t.StyleLoadingMonitor=class{constructor(){this.unloadedStyles=[],this.finishedLoading=!1;const e=e=>{const t=e.target.dataset.source;this.unloadedStyles.push(t)};window.addEventListener("DOMContentLoaded",(()=>{for(const t of document.getElementsByClassName("code-user-style"))t.dataset.source&&(t.onerror=e)})),window.addEventListener("load",(()=>{this.unloadedStyles.length&&(this.finishedLoading=!0,this.poster&&this.poster.postMessage("previewStyleLoadError",{unloadedStyles:this.unloadedStyles}))}))}setPoster(e){this.poster=e,this.finishedLoading&&e.postMessage("previewStyleLoadError",{unloadedStyles:this.unloadedStyles})}}},414:(e,t)=>{let s;function o(e){const t=document.getElementById("vscode-asciidoc-preview-data");if(t){const s=t.getAttribute(e);if(s)return JSON.parse(s)}throw new Error(`Could not load data for ${e}`)}Object.defineProperty(t,"__esModule",{value:!0}),t.getSettings=t.getData=void 0,t.getData=o,t.getSettings=function(){if(s)return s;if(s=o("data-settings"),s)return s;throw new Error("Could not load settings")}},131:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getStrings=void 0,t.getStrings=function(){const e=document.getElementById("vscode-asciidoc-preview-data");if(e){const t=e.getAttribute("data-strings");if(t)return JSON.parse(t)}throw new Error("Could not load strings")}}},t={};function s(o){var n=t[o];if(void 0!==n)return n.exports;var i=t[o]={exports:{}};return e[o](i,i.exports,s),i.exports}(()=>{const e=s(891),t=s(992);window.cspAlerter=new e.CspAlerter,window.styleLoadingMonitor=new t.StyleLoadingMonitor})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QmYsZUFDQSxTQVNBbEQsT0FBT3FELFdBQWEsSUFBSSxFQUFBQyxXQUN4QnRELE9BQU91RCxvQkFBc0IsSUFBSSxFQUFBQyxxQiIsInNvdXJjZXMiOlsid2VicGFjazovL2FzY2lpZG9jdG9yLXZzY29kZS8uL3ByZXZpZXctc3JjL2NzcC50cyIsIndlYnBhY2s6Ly9hc2NpaWRvY3Rvci12c2NvZGUvLi9wcmV2aWV3LXNyYy9sb2FkaW5nLnRzIiwid2VicGFjazovL2FzY2lpZG9jdG9yLXZzY29kZS8uL3ByZXZpZXctc3JjL3NldHRpbmdzLnRzIiwid2VicGFjazovL2FzY2lpZG9jdG9yLXZzY29kZS8uL3ByZXZpZXctc3JjL3N0cmluZ3MudHMiLCJ3ZWJwYWNrOi8vYXNjaWlkb2N0b3ItdnNjb2RlL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2FzY2lpZG9jdG9yLXZzY29kZS8uL3ByZXZpZXctc3JjL3ByZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbmltcG9ydCB7IE1lc3NhZ2VQb3N0ZXIgfSBmcm9tICcuL21lc3NhZ2luZydcbmltcG9ydCB7IGdldFNldHRpbmdzIH0gZnJvbSAnLi9zZXR0aW5ncydcbmltcG9ydCB7IGdldFN0cmluZ3MgfSBmcm9tICcuL3N0cmluZ3MnXG5cbi8qKlxuICogU2hvd3MgYW4gYWxlcnQgd2hlbiB0aGVyZSBpcyBhIGNvbnRlbnQgc2VjdXJpdHkgcG9saWN5IHZpb2xhdGlvbi5cbiAqL1xuZXhwb3J0IGNsYXNzIENzcEFsZXJ0ZXIge1xuICBwcml2YXRlIGRpZFNob3cgPSBmYWxzZVxuICBwcml2YXRlIGRpZEhhdmVDc3BXYXJuaW5nID0gZmFsc2VcblxuICBwcml2YXRlIG1lc3NhZ2luZz86IE1lc3NhZ2VQb3N0ZXJcblxuICBjb25zdHJ1Y3RvciAoKSB7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignc2VjdXJpdHlwb2xpY3l2aW9sYXRpb24nLCAoKSA9PiB7XG4gICAgICB0aGlzLm9uQ3NwV2FybmluZygpXG4gICAgfSlcblxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgKGV2ZW50KSA9PiB7XG4gICAgICBpZiAoZXZlbnQgJiYgZXZlbnQuZGF0YSAmJiBldmVudC5kYXRhLm5hbWUgPT09ICd2c2NvZGUtZGlkLWJsb2NrLXN2ZycpIHtcbiAgICAgICAgdGhpcy5vbkNzcFdhcm5pbmcoKVxuICAgICAgfVxuICAgIH0pXG4gIH1cblxuICBwdWJsaWMgc2V0UG9zdGVyIChwb3N0ZXI6IE1lc3NhZ2VQb3N0ZXIpIHtcbiAgICB0aGlzLm1lc3NhZ2luZyA9IHBvc3RlclxuICAgIGlmICh0aGlzLmRpZEhhdmVDc3BXYXJuaW5nKSB7XG4gICAgICB0aGlzLnNob3dDc3BXYXJuaW5nKClcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIG9uQ3NwV2FybmluZyAoKSB7XG4gICAgdGhpcy5kaWRIYXZlQ3NwV2FybmluZyA9IHRydWVcbiAgICB0aGlzLnNob3dDc3BXYXJuaW5nKClcbiAgfVxuXG4gIHByaXZhdGUgc2hvd0NzcFdhcm5pbmcgKCkge1xuICAgIGNvbnN0IHN0cmluZ3MgPSBnZXRTdHJpbmdzKClcbiAgICBjb25zdCBzZXR0aW5ncyA9IGdldFNldHRpbmdzKClcblxuICAgIGlmICh0aGlzLmRpZFNob3cgfHwgc2V0dGluZ3MuZGlzYWJsZVNlY3VyaXR5V2FybmluZ3MgfHwgIXRoaXMubWVzc2FnaW5nKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgdGhpcy5kaWRTaG93ID0gdHJ1ZVxuXG4gICAgY29uc3Qgbm90aWZpY2F0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpXG4gICAgbm90aWZpY2F0aW9uLmlubmVyVGV4dCA9IHN0cmluZ3MuY3NwQWxlcnRNZXNzYWdlVGV4dFxuICAgIG5vdGlmaWNhdGlvbi5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2NvZGUtY3NwLXdhcm5pbmcnKVxuICAgIG5vdGlmaWNhdGlvbi5zZXRBdHRyaWJ1dGUoJ3RpdGxlJywgc3RyaW5ncy5jc3BBbGVydE1lc3NhZ2VUaXRsZSlcblxuICAgIG5vdGlmaWNhdGlvbi5zZXRBdHRyaWJ1dGUoJ3JvbGUnLCAnYnV0dG9uJylcbiAgICBub3RpZmljYXRpb24uc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJywgc3RyaW5ncy5jc3BBbGVydE1lc3NhZ2VMYWJlbClcbiAgICBub3RpZmljYXRpb24ub25jbGljayA9ICgpID0+IHtcbiAgICAgIHRoaXMubWVzc2FnaW5nIS5wb3N0TWVzc2FnZSgnc2hvd1ByZXZpZXdTZWN1cml0eVNlbGVjdG9yJywgeyBzb3VyY2U6IHNldHRpbmdzLnNvdXJjZSB9KVxuICAgIH1cbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKG5vdGlmaWNhdGlvbilcbiAgfVxufVxuIiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgTWVzc2FnZVBvc3RlciB9IGZyb20gJy4vbWVzc2FnaW5nJ1xuXG5leHBvcnQgY2xhc3MgU3R5bGVMb2FkaW5nTW9uaXRvciB7XG4gIHByaXZhdGUgdW5sb2FkZWRTdHlsZXM6IHN0cmluZ1tdID0gW11cbiAgcHJpdmF0ZSBmaW5pc2hlZExvYWRpbmc6IGJvb2xlYW4gPSBmYWxzZVxuXG4gIHByaXZhdGUgcG9zdGVyPzogTWVzc2FnZVBvc3RlclxuXG4gIGNvbnN0cnVjdG9yICgpIHtcbiAgICBjb25zdCBvblN0eWxlTG9hZEVycm9yID0gKGV2ZW50OiBhbnkpID0+IHtcbiAgICAgIGNvbnN0IHNvdXJjZSA9IGV2ZW50LnRhcmdldC5kYXRhc2V0LnNvdXJjZVxuICAgICAgdGhpcy51bmxvYWRlZFN0eWxlcy5wdXNoKHNvdXJjZSlcbiAgICB9XG5cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsICgpID0+IHtcbiAgICAgIC8vIEB0cy1pZ25vcmUgVFMyNDg4XG4gICAgICBmb3IgKGNvbnN0IGxpbmsgb2YgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnY29kZS11c2VyLXN0eWxlJykgYXMgSFRNTENvbGxlY3Rpb25PZjxIVE1MRWxlbWVudD4pIHtcbiAgICAgICAgaWYgKGxpbmsuZGF0YXNldC5zb3VyY2UpIHtcbiAgICAgICAgICBsaW5rLm9uZXJyb3IgPSBvblN0eWxlTG9hZEVycm9yXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KVxuXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCAoKSA9PiB7XG4gICAgICBpZiAoIXRoaXMudW5sb2FkZWRTdHlsZXMubGVuZ3RoKSB7XG4gICAgICAgIHJldHVyblxuICAgICAgfVxuICAgICAgdGhpcy5maW5pc2hlZExvYWRpbmcgPSB0cnVlXG4gICAgICBpZiAodGhpcy5wb3N0ZXIpIHtcbiAgICAgICAgdGhpcy5wb3N0ZXIucG9zdE1lc3NhZ2UoJ3ByZXZpZXdTdHlsZUxvYWRFcnJvcicsIHsgdW5sb2FkZWRTdHlsZXM6IHRoaXMudW5sb2FkZWRTdHlsZXMgfSlcbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgcHVibGljIHNldFBvc3RlciAocG9zdGVyOiBNZXNzYWdlUG9zdGVyKTogdm9pZCB7XG4gICAgdGhpcy5wb3N0ZXIgPSBwb3N0ZXJcbiAgICBpZiAodGhpcy5maW5pc2hlZExvYWRpbmcpIHtcbiAgICAgIHBvc3Rlci5wb3N0TWVzc2FnZSgncHJldmlld1N0eWxlTG9hZEVycm9yJywgeyB1bmxvYWRlZFN0eWxlczogdGhpcy51bmxvYWRlZFN0eWxlcyB9KVxuICAgIH1cbiAgfVxufVxuIiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5leHBvcnQgaW50ZXJmYWNlIFByZXZpZXdTZXR0aW5ncyB7XG4gIHNvdXJjZTogc3RyaW5nO1xuICBsaW5lOiBudW1iZXI7XG4gIGxpbmVDb3VudDogbnVtYmVyO1xuICBzY3JvbGxQcmV2aWV3V2l0aEVkaXRvcj86IGJvb2xlYW47XG4gIHNjcm9sbEVkaXRvcldpdGhQcmV2aWV3OiBib29sZWFuO1xuICBkaXNhYmxlU2VjdXJpdHlXYXJuaW5nczogYm9vbGVhbjtcbiAgZG91YmxlQ2xpY2tUb1N3aXRjaFRvRWRpdG9yOiBib29sZWFuO1xufVxuXG5sZXQgY2FjaGVkU2V0dGluZ3M6IFByZXZpZXdTZXR0aW5ncyB8IHVuZGVmaW5lZFxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0RGF0YSAoa2V5OiBzdHJpbmcpOiBQcmV2aWV3U2V0dGluZ3Mge1xuICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3ZzY29kZS1hc2NpaWRvYy1wcmV2aWV3LWRhdGEnKVxuICBpZiAoZWxlbWVudCkge1xuICAgIGNvbnN0IGRhdGEgPSBlbGVtZW50LmdldEF0dHJpYnV0ZShrZXkpXG4gICAgaWYgKGRhdGEpIHtcbiAgICAgIHJldHVybiBKU09OLnBhcnNlKGRhdGEpXG4gICAgfVxuICB9XG5cbiAgdGhyb3cgbmV3IEVycm9yKGBDb3VsZCBub3QgbG9hZCBkYXRhIGZvciAke2tleX1gKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0U2V0dGluZ3MgKCk6IFByZXZpZXdTZXR0aW5ncyB7XG4gIGlmIChjYWNoZWRTZXR0aW5ncykge1xuICAgIHJldHVybiBjYWNoZWRTZXR0aW5nc1xuICB9XG5cbiAgY2FjaGVkU2V0dGluZ3MgPSBnZXREYXRhKCdkYXRhLXNldHRpbmdzJylcbiAgaWYgKGNhY2hlZFNldHRpbmdzKSB7XG4gICAgcmV0dXJuIGNhY2hlZFNldHRpbmdzXG4gIH1cblxuICB0aHJvdyBuZXcgRXJyb3IoJ0NvdWxkIG5vdCBsb2FkIHNldHRpbmdzJylcbn1cbiIsIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFN0cmluZ3MgKCk6IHsgW2tleTogc3RyaW5nXTogc3RyaW5nIH0ge1xuICBjb25zdCBzdG9yZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd2c2NvZGUtYXNjaWlkb2MtcHJldmlldy1kYXRhJylcbiAgaWYgKHN0b3JlKSB7XG4gICAgY29uc3QgZGF0YSA9IHN0b3JlLmdldEF0dHJpYnV0ZSgnZGF0YS1zdHJpbmdzJylcbiAgICBpZiAoZGF0YSkge1xuICAgICAgcmV0dXJuIEpTT04ucGFyc2UoZGF0YSlcbiAgICB9XG4gIH1cbiAgdGhyb3cgbmV3IEVycm9yKCdDb3VsZCBub3QgbG9hZCBzdHJpbmdzJylcbn1cbiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbmltcG9ydCB7IENzcEFsZXJ0ZXIgfSBmcm9tICcuL2NzcCdcbmltcG9ydCB7IFN0eWxlTG9hZGluZ01vbml0b3IgfSBmcm9tICcuL2xvYWRpbmcnXG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgaW50ZXJmYWNlIFdpbmRvdyB7XG4gICAgY3NwQWxlcnRlcjogQ3NwQWxlcnRlcjtcbiAgICBzdHlsZUxvYWRpbmdNb25pdG9yOiBTdHlsZUxvYWRpbmdNb25pdG9yO1xuICB9XG59XG5cbndpbmRvdy5jc3BBbGVydGVyID0gbmV3IENzcEFsZXJ0ZXIoKVxud2luZG93LnN0eWxlTG9hZGluZ01vbml0b3IgPSBuZXcgU3R5bGVMb2FkaW5nTW9uaXRvcigpXG4iXSwibmFtZXMiOlsiY29uc3RydWN0b3IiLCJkaWRTaG93IiwiZGlkSGF2ZUNzcFdhcm5pbmciLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJ0aGlzIiwib25Dc3BXYXJuaW5nIiwid2luZG93IiwiZXZlbnQiLCJkYXRhIiwibmFtZSIsInNldFBvc3RlciIsInBvc3RlciIsIm1lc3NhZ2luZyIsInNob3dDc3BXYXJuaW5nIiwic3RyaW5ncyIsImdldFN0cmluZ3MiLCJzZXR0aW5ncyIsImdldFNldHRpbmdzIiwiZGlzYWJsZVNlY3VyaXR5V2FybmluZ3MiLCJub3RpZmljYXRpb24iLCJjcmVhdGVFbGVtZW50IiwiaW5uZXJUZXh0IiwiY3NwQWxlcnRNZXNzYWdlVGV4dCIsInNldEF0dHJpYnV0ZSIsImNzcEFsZXJ0TWVzc2FnZVRpdGxlIiwiY3NwQWxlcnRNZXNzYWdlTGFiZWwiLCJvbmNsaWNrIiwicG9zdE1lc3NhZ2UiLCJzb3VyY2UiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJ1bmxvYWRlZFN0eWxlcyIsImZpbmlzaGVkTG9hZGluZyIsIm9uU3R5bGVMb2FkRXJyb3IiLCJ0YXJnZXQiLCJkYXRhc2V0IiwicHVzaCIsImxpbmsiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwib25lcnJvciIsImxlbmd0aCIsImNhY2hlZFNldHRpbmdzIiwiZ2V0RGF0YSIsImtleSIsImVsZW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImdldEF0dHJpYnV0ZSIsIkpTT04iLCJwYXJzZSIsIkVycm9yIiwic3RvcmUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJ1bmRlZmluZWQiLCJleHBvcnRzIiwibW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsImNzcEFsZXJ0ZXIiLCJDc3BBbGVydGVyIiwic3R5bGVMb2FkaW5nTW9uaXRvciIsIlN0eWxlTG9hZGluZ01vbml0b3IiXSwic291cmNlUm9vdCI6IiJ9